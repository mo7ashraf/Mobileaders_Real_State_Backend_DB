generator client { provider = "prisma-client-js" }
datasource db { provider = "mysql"; url = env("DATABASE_URL") }

model User {
  id           String   @id @default(cuid())
  phone        String   @unique
  name         String
  avatarUrl    String?  @db.Text
  createdAt    DateTime @default(now())
  bio          String?  @db.Text
  orgName      String?
  accRole      String?
  channels     String?  @db.LongText // JSON stringified
  socialLinks  String?  @db.LongText // JSON stringified

  sellerProfile  SellerProfile?
  listings       Listing[]
  favorites      Favorite[]
}

model SellerProfile {
  id           String   @id @default(cuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
  verified     Boolean  @default(false)
  clients      Int      @default(0)
  rating       Float    @default(0)
  badges       String   @db.LongText // JSON stringified array
  joinedHijri  String?
  joinedText   String?
  regionText   String?
}

model Listing {
  id         String    @id @default(cuid())
  sellerId   String
  seller     User      @relation(fields: [sellerId], references: [id])
  title      String
  address    String
  city       String
  price      Int
  bedrooms   Int       @default(0)
  bathrooms  Int       @default(0)
  areaSqm    Int       @default(0)
  status     String    @default("rent")
  category   String    @default("apartment")
  imageUrl   String?   @db.Text
  tags       String?   @db.LongText // JSON stringified array
  createdAt  DateTime  @default(now())
}

model Favorite {
  userId    String
  listingId String
  user      User    @relation(fields: [userId], references: [id])
  listing   Listing @relation(fields: [listingId], references: [id])
  @@id([userId, listingId])
}

model Order {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  status     String   @default("open")
  notes      String?  @db.Text
  createdAt  DateTime @default(now())
}

model PropertyRequest {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  type       String
  city       String
  budgetMin  Int      @default(0)
  budgetMax  Int      @default(0)
  bedrooms   Int      @default(0)
  bathrooms  Int      @default(0)
  notes      String?  @db.Text
  status     String   @default("open")
  createdAt  DateTime @default(now())
}

model Notification {
  id        String   @id @default(cuid())
  userId    String?
  title     String
  subtitle  String?
  starred   Boolean  @default(false)
  readAt    DateTime?
  createdAt DateTime @default(now())
}

model Policy {
  slug      String   @id
  title     String
  contentMd String   @db.LongText
  updatedAt DateTime @updatedAt
}

model AppSettings {
  id            Int    @id @default(1)
  language      String @default("ar")
  theme         String @default("system")
  notifications String? @db.LongText  // JSON
  privacy       String? @db.LongText  // JSON
}

model SupportSettings {
  id        Int    @id @default(1)
  whatsapp  String @default("966500000000")
  email     String @default("support@example.com")
}
